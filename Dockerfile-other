# syntax=docker/dockerfile:1.4
ARG PYTHON_VERSION=3.13-slim-bullseye
FROM python:${PYTHON_VERSION} as base
ENV DOCKER_BUILDKIT=1

# Stage 1: Install system dependencies with caching
FROM base as system-deps
RUN --mount=type=cache,target=/var/cache/apt \
    apt-get update && apt-get install -y \
    wget \
    xfonts-75dpi \
    xfonts-base \
    gvfs \
    colord \
    glew-utils \
    libvisual-0.4-plugins \
    gstreamer1.0-tools \
    opus-tools \
    qt5-image-formats-plugins \
    qtwayland5 \
    qt5-qmltooling-plugins \
    librsvg2-bin \
    lm-sensors \
    && rm -rf /var/lib/apt/lists/*

# Stage 2: Install wkhtmltox with caching
FROM system-deps as wkhtml
RUN --mount=type=cache,target=/var/cache/apt \
    wget -q https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-2/wkhtmltox_0.12.6.1-2.bullseye_amd64.deb \
    && dpkg -i wkhtmltox_0.12.6.1-2.bullseye_amd64.deb \
    && rm wkhtmltox_0.12.6.1-2.bullseye_amd64.deb

# Stage 3: Install Playwright and Chromium separately
FROM wkhtml as playwright
WORKDIR /GitHub/bubble_bot
COPY pyproject.toml uv.lock ./
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    UV_CACHE_DIR=/var/cache/uv

# Install uv to manage Playwright installation
RUN --mount=type=cache,target=${UV_CACHE_DIR} \
    pip install --upgrade uv

# Install Playwright and Chromium (isolated from pyproject.toml)
RUN --mount=type=cache,target=/root/.cache/playwright \
    uv add playwright && \
    uv run playwright install chromium

# Stage 4: Python + uv + project dependencies
FROM playwright as build
# Copy only the `pyproject.toml` and `uv.lock` for dependency installation
RUN --mount=type=cache,target=${UV_CACHE_DIR} \
    uv sync

# Stage 5: Final runtime image
FROM build as runtime
# Copy full source code
COPY . .
WORKDIR /GitHub/bubble_bot/src
CMD ["uv", "run", "bot.py"]
